#!/usr/bin/env python

import os
import sys
import pprint
import requests
import requests.packages.urllib3
from six.moves.configparser import RawConfigParser
import attrdict
import six
from auth import CredentialStore
from errors import CredentialError

requests.packages.urllib3.disable_warnings()
pp = pprint.PrettyPrinter(indent=4)

hashes = {}
appNames = {}

class CredStore(object):
    def __init__(self, *args, **kwargs):
        credential_file = kwargs.pop("credential_file", None)
        self.credential_store = CredentialStore(credential_file=credential_file)

        self.credential_profile_name = kwargs.pop("profile", None)
        self.credentials = self.credential_store.get_credentials(self.credential_profile_name)

try:
    my_creds = CredStore(profile='default')
except CredentialError, e:
    print e
    sys.exit()

api_key,conn_id = my_creds.credentials.api_key, my_creds.credentials.conn_id
token = "%s/%s" % (api_key, conn_id)


#Request all the events with an application name of powershell.exe
url = 'https://api5.conferdeploy.net/integrationServices/v3/event?applicationName=powershell.exe'
#url = 'https://api5.conferdeploy.net/integrationServices/v3/event?applicationName=powershell.exe&rows=1000&searchWindow=2w'
headers = {'X-Auth-Token': token}

r = requests.get(url, headers=headers)
foo = r.json()

# For each result grab the sha256 hash
#  if the hash is a key in the hashes dictionary
#  increment the count
#  if not, create an entry with a count of 1
for bar in foo['results']:
	sha256Hash = bar['selectedApp']['sha256Hash']
	if sha256Hash in hashes.keys():
		hashes[sha256Hash] += 1
	else:
		hashes[sha256Hash] = 1

# Print the hashes and the count of times we saw the hash
print "Powershell Hashes and Count of Occurences"
for k in hashes.keys():
	print k + " = " + str(hashes[k])

# Reiterate over the hash dictionary
#  search the events for events generated by a process with the hash
for j in hashes.keys():
	url = 'https://api5.conferdeploy.net/integrationServices/v3/event?sha256hash=%s' % (j)
	#url = 'https://api5.conferdeploy.net/integrationServices/v3/event?sha256hash=%s&rows=1000&searchWindow=2w' % (j)
	r = requests.get(url, headers=headers)
	foo = r.json()
	# The following 2 lines were uncommented for the generation of sample_output.txt (run against my_pocs_instance's POC instance)
	#pp.pprint(foo['results'])
	#print "#" * 100
	
	# for each result returned for the sha256 based search
	#  look to see if the hash of the returned process is in our dictionary of hashes
	#  if yes, add the name of the application to the application names dictionary
	# Note: This is where the API seems broken.  When run against the my_pocs_instance POC instance
	#	we get non-sensical results.  None of the apps match the sha256.
	#   When run against my demo instance I get the expected results.
	#   Change line 30 from my_pocs_instance to default to switch between my_pocs_instance and BJs demo instance
	for bar in foo['results']:
		if bar['selectedApp']['sha256Hash'] in hashes.keys():
			appName = bar['selectedApp']['applicationName']
			if appName in appNames.keys():
				appNames[appName] +=1
			else:
				appNames[appName] = 1

print ""
print "Application Names and Count of Occurrences"
for k in appNames.keys():
	print k + " = " + str(appNames[k])

